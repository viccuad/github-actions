name: Build and release a Kubewarden policy written in Rego

on:
  workflow_call:
    inputs:
      oci-target:
        type: string
        required: true
      artifacthub:
        description: "check artifacthub-pkg.yml for submission to ArtifactHub"
        required: false
        type: boolean
        default: true
      policy-working-dir:
        description: "working directory of the policy. Useful for repos with policies in folders"
        required: false
        type: string
        default: .
      policy-version:
        description: |
          Release version of the policy, without 'v' prefix. Optional.
          Defaults to extracting the version from tag if tag present.
          E.g: tag "v0.1.0", policy-version=0.1.0
        required: false
        type: string

jobs:
  release:
    permissions:
      # Give the default GITHUB_TOKEN write permission to push the OCI artifact
      # to ghcr.io
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        uses: kubewarden/github-actions/policy-gh-action-dependencies@v4.4.0
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # until https://github.com/actions/checkout/pull/579 is released
          fetch-depth: 0
      - id: calculate-version
        shell: bash
        run: |
          if [ "${{ inputs.policy-version }}" != "" ];then 
            # If present, it means we are dealing with tags in the form of `PolicyName/v0.1.0`.
            # Use the passed policy-version, already without `v` prefix
            version=${{ inputs.policy-version }}
          else
            if [ ${{ startsWith(github.ref, 'refs/tags/v') }} == true ]; then
              # Triggered via normal tag.
              # Use the latest tag (e.g: v0.1.11) without the `v` prefix.
              version=$(git describe --tags --abbrev=0 | cut -c2-)
            else
              # Triggered via branch, version is not checked in artifacthub.
              # Still, `make artifacthub-pkg.yml` needs a proper semver string.
              if [ $(git describe --tags) ]; then
                # Tag exists, use most recent tag with the number of additional
                # commits on top of the tagged object & last commit hash (eg.
                # v0.1.11-3-g8a36322), without the `v` prefix.
                version=$(git describe --tags | cut -c2-)
              else
                # Tag doesn't exist, provide bogus version
                version="0.0.0-$(git describe --always)-unreleased"
              fi 
            fi
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Check that `io.kubewarden.policy.version` annotation is up-to-date
        # skip when releasing :latest from main, versions will not match
        if: startsWith(github.ref, 'refs/tags/v')
        uses: kubewarden/github-actions/check-policy-version@v4.4.0
        with:
          expected-version: ${{ steps.calculate-version.outputs.version }}
          policy-working-dir: ${{ inputs.policy-working-dir }}
      - name: Install opa
        uses: kubewarden/github-actions/opa-installer@v4.4.0
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build policy
        working-directory: ${{ inputs.policy-working-dir }}
        shell: bash
        run: |
          make policy.wasm
      - name: Annotate policy
        working-directory: ${{ inputs.policy-working-dir }}
        shell: bash
        run: |
          make annotated-policy.wasm
      - name: Run e2e tests
        working-directory: ${{ inputs.policy-working-dir }}
        shell: bash
        run: |
          make e2e-tests
      - name: Release
        uses: kubewarden/github-actions/policy-release@v4.4.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          oci-target: ${{ inputs.oci-target }}
          policy-working-dir: ${{ inputs.policy-working-dir }}
          policy-version: ${{ steps.calculate-version.outputs.version }}
  push-artifacthub:
    # skip when releasing :latest from main, versions will not match
    if: ${{ inputs.artifacthub && ( ! startsWith(github.ref, 'refs/heads/') ) }}
    needs: release
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Push artifacthub files to artifacthub branch
        uses: kubewarden/github-actions/push-artifacthub@v4.4.0
        with:
          policy-working-dir: ${{ inputs.policy-working-dir }}
